// Test de connexion MongoDB
import mongoose from 'mongoose'
import dotenv from 'dotenv'

dotenv.config()

console.log('\nüîç Test de connexion MongoDB...\n')
console.log('================================')
console.log('Configuration:')
console.log('================================')
console.log('NODE_ENV:', process.env.NODE_ENV || 'Non d√©fini')
console.log('PORT:', process.env.PORT || 'Non d√©fini')
console.log('MONGODB_URI:', process.env.MONGODB_URI ? '‚úÖ D√©fini' : '‚ùå Non d√©fini')
console.log('JWT_SECRET:', process.env.JWT_SECRET ? '‚úÖ D√©fini' : '‚ùå Non d√©fini')
console.log('FRONTEND_URL:', process.env.FRONTEND_URL || 'Non d√©fini')

if (!process.env.MONGODB_URI) {
  console.log('\n‚ùå ERREUR: MONGODB_URI n\'est pas d√©fini dans .env')
  console.log('\nCr√©ez un fichier .env avec:')
  console.log('MONGODB_URI=mongodb+srv://fdj_db_user:password@fjd.c4zt5vn.mongodb.net/fdj?retryWrites=true&w=majority&appName=fjd')
  process.exit(1)
}

console.log('\n================================')
console.log('Tentative de connexion...')
console.log('================================\n')

const startTime = Date.now()

mongoose.connect(process.env.MONGODB_URI)
  .then(() => {
    const duration = ((Date.now() - startTime) / 1000).toFixed(2)
    console.log('\n‚úÖ ‚úÖ ‚úÖ CONNEXION R√âUSSIE ! ‚úÖ ‚úÖ ‚úÖ')
    console.log('\n================================')
    console.log('Informations de connexion:')
    console.log('================================')
    console.log('Host:', mongoose.connection.host)
    console.log('Database:', mongoose.connection.name)
    console.log('Port:', mongoose.connection.port || 'N/A')
    console.log('Temps de connexion:', duration + 's')
    console.log('\nüéâ MongoDB fonctionne correctement !')
    console.log('\nVous pouvez maintenant d√©marrer le serveur avec:')
    console.log('  node server.js\n')
    process.exit(0)
  })
  .catch((error) => {
    const duration = ((Date.now() - startTime) / 1000).toFixed(2)
    console.log('\n‚ùå ‚ùå ‚ùå ERREUR DE CONNEXION ‚ùå ‚ùå ‚ùå')
    console.log('\n================================')
    console.log('D√©tails de l\'erreur:')
    console.log('================================')
    console.log('Type:', error.name)
    console.log('Message:', error.message)
    console.log('Temps √©coul√©:', duration + 's')
    
    console.log('\n================================')
    console.log('üîß Solutions possibles:')
    console.log('================================\n')
    
    if (error.message.includes('bad auth') || error.message.includes('Authentication failed')) {
      console.log('‚ûú PROBL√àME: Username ou password incorrect')
      console.log('  Solutions:')
      console.log('  1. V√©rifiez Database Access sur MongoDB Atlas')
      console.log('  2. V√©rifiez le username: fdj_db_user')
      console.log('  3. V√©rifiez le mot de passe dans MONGODB_URI')
      console.log('  4. Si le mot de passe contient @#$%&, encodez-les:')
      console.log('     @ = %40, # = %23, $ = %24, etc.')
    } else if (error.message.includes('ENOTFOUND') || error.message.includes('getaddrinfo')) {
      console.log('‚ûú PROBL√àME: URI MongoDB incorrect ou probl√®me DNS')
      console.log('  Solutions:')
      console.log('  1. V√©rifiez le format de MONGODB_URI dans .env')
      console.log('  2. Format attendu: mongodb+srv://user:pass@host/database?params')
      console.log('  3. V√©rifiez que le cluster existe sur MongoDB Atlas')
      console.log('  4. Sur O2Switch, v√©rifiez la connexion internet du serveur')
    } else if (error.message.includes('connect') || error.message.includes('ETIMEDOUT')) {
      console.log('‚ûú PROBL√àME: Impossible de se connecter au serveur MongoDB')
      console.log('  Solutions:')
      console.log('  1. MongoDB Atlas ‚Üí Network Access ‚Üí Ajoutez 0.0.0.0/0')
      console.log('  2. V√©rifiez que le firewall O2Switch autorise les connexions sortantes')
      console.log('  3. Testez depuis un autre r√©seau pour confirmer')
    } else if (error.message.includes('poolSize')) {
      console.log('‚ûú PROBL√àME: Configuration de connexion')
      console.log('  Solutions:')
      console.log('  1. Supprimez les options useNewUrlParser et useUnifiedTopology')
      console.log('  2. Utilisez uniquement la connection string de MongoDB Atlas')
    } else {
      console.log('‚ûú PROBL√àME: Erreur inconnue')
      console.log('  D√©tails complets:')
      console.log(error)
    }
    
    console.log('\n================================')
    console.log('üìã Checklist de v√©rification:')
    console.log('================================')
    console.log('‚òê Fichier .env existe dans le dossier backend/')
    console.log('‚òê MONGODB_URI est d√©fini dans .env')
    console.log('‚òê Username = fdj_db_user')
    console.log('‚òê Mot de passe correct (sans caract√®res sp√©ciaux ou encod√©s)')
    console.log('‚òê MongoDB Atlas ‚Üí Network Access ‚Üí 0.0.0.0/0 ajout√©')
    console.log('‚òê MongoDB Atlas ‚Üí Database Access ‚Üí Utilisateur existe')
    console.log('‚òê Sur O2Switch ‚Üí Connexions sortantes autoris√©es\n')
    
    process.exit(1)
  })

// Timeout apr√®s 30 secondes
setTimeout(() => {
  console.log('\n‚è±Ô∏è  TIMEOUT: La connexion prend trop de temps (>30s)')
  console.log('Cela peut indiquer:')
  console.log('  - Firewall bloquant les connexions sortantes')
  console.log('  - MongoDB Atlas inaccessible depuis ce serveur')
  console.log('  - Probl√®me r√©seau sur O2Switch\n')
  process.exit(1)
}, 30000)

