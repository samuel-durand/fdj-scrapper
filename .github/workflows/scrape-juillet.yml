name: 🎯 Scraper Juillet et Push

on:
  # Exécution manuelle uniquement
  workflow_dispatch:

jobs:
  scrape-juillet:
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Récupération du code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: 🟢 Installation de Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: 📦 Installation des dépendances
        run: |
          npm install puppeteer
          npm ci --ignore-scripts || npm install
      
      - name: 🎲 Scraping du mois de juillet
        run: |
          echo "═══════════════════════════════════════════════════"
          echo "🗓️  SCRAPING DES RÉSULTATS DE JUILLET"
          echo "═══════════════════════════════════════════════════"
          echo ""
          echo "📅 Période ciblée : Juillet 2025"
          echo "🎯 Jeux : EuroMillions, Loto, EuroDreams"
          echo ""
          
          # Scraper juillet (mois en cours - 3 mois = avril à juillet inclus)
          # Pour être sûr d'avoir tout juillet, on scrape 4 mois
          node scraper-urls-directes.js 4
          
          echo ""
          echo "✅ Scraping terminé !"
          echo ""
          
          # Afficher les stats du fichier généré
          if [ -f resultats-cache.json ]; then
            SIZE=$(du -h resultats-cache.json | cut -f1)
            LINES=$(wc -l < resultats-cache.json)
            echo "📊 Fichier généré :"
            echo "   • Taille : $SIZE"
            echo "   • Lignes : $LINES"
            echo ""
            
            # Compter les tirages par jeu
            EM_COUNT=$(grep -o '"id": "em-' resultats-cache.json | wc -l)
            LOTO_COUNT=$(grep -o '"id": "loto-' resultats-cache.json | wc -l)
            ED_COUNT=$(grep -o '"id": "ed-' resultats-cache.json | wc -l)
            
            echo "🎰 Tirages récupérés :"
            echo "   • EuroMillions : $EM_COUNT tirages"
            echo "   • Loto : $LOTO_COUNT tirages"
            echo "   • EuroDreams : $ED_COUNT tirages"
            echo "   • TOTAL : $((EM_COUNT + LOTO_COUNT + ED_COUNT)) tirages"
          else
            echo "❌ Fichier resultats-cache.json non généré !"
            exit 1
          fi
      
      - name: 📁 Copie vers dist/
        run: |
          echo "📦 Copie du cache dans dist/..."
          mkdir -p dist
          cp resultats-cache.json dist/
          echo "✅ Fichier copié dans dist/"
      
      - name: 🔍 Vérification des modifications
        id: check_changes
        run: |
          git diff --quiet resultats-cache.json && echo "changed=false" >> $GITHUB_OUTPUT || echo "changed=true" >> $GITHUB_OUTPUT
      
      - name: 💾 Commit et Push
        if: steps.check_changes.outputs.changed == 'true'
        run: |
          echo "═══════════════════════════════════════════════════"
          echo "💾 COMMIT ET PUSH DES RÉSULTATS"
          echo "═══════════════════════════════════════════════════"
          echo ""
          
          # Configuration Git
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          
          # Ajouter les fichiers modifiés
          git add resultats-cache.json dist/resultats-cache.json
          
          # Compter les modifications
          CHANGES=$(git diff --cached --shortstat)
          echo "📝 Modifications : $CHANGES"
          echo ""
          
          # Commit avec message détaillé
          TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S UTC')
          git commit -m "data: scraping juillet - résultats mis à jour

          🗓️ Période : Juillet 2025
          🤖 Automatique : GitHub Actions
          ⏰ Date : $TIMESTAMP
          
          Fichiers mis à jour :
          - resultats-cache.json
          - dist/resultats-cache.json"
          
          # Push vers GitHub
          echo "🚀 Push vers GitHub..."
          git push
          
          echo ""
          echo "✅ Résultats commitées et pushées avec succès !"
      
      - name: 🌐 Upload vers o2switch
        if: steps.check_changes.outputs.changed == 'true'
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          protocol: ftps
          port: 21
          local-dir: ./
          server-dir: /www/
          dangerous-clean-slate: false
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/.github/**
            **/docs/**
            **/scripts/**
            **/utils/**
            **/src/**
            **/*.md
            **/*.txt
            **/*.bat
            **/*.js
            **/*.json
            !**/resultats-cache.json
      
      - name: 📊 Résumé final
        run: |
          echo ""
          echo "═══════════════════════════════════════════════════"
          echo "✅ MISSION ACCOMPLIE !"
          echo "═══════════════════════════════════════════════════"
          echo ""
          echo "✅ Scraping de juillet terminé"
          echo "✅ Résultats commitées sur GitHub"
          echo "✅ Fichier uploadé sur o2switch"
          echo ""
          echo "🌐 Votre site est maintenant à jour !"
          echo "👉 http://resultat-fdj.soqe8286.odns.fr/"
          echo ""
          echo "═══════════════════════════════════════════════════"
      
      - name: ⚠️ Aucune modification
        if: steps.check_changes.outputs.changed == 'false'
        run: |
          echo ""
          echo "ℹ️  Aucune modification détectée"
          echo "Les résultats de juillet sont déjà à jour !"
          echo ""

